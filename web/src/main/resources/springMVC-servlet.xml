<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描且只扫描@Controller -->
    <!-- use-default-filters默认为true，所有组件都扫描 -->
    <context:component-scan base-package="com.netease.angel.controller" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <!-- <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->
    </context:component-scan>

    <mvc:annotation-driven/>
    <!-- mvc扫描配置文件， -->
    <!--classpath*：不仅包含class路径，还包括jar文件中(class路径)进行查找-->
    <!--classpath*的使用：当项目中有多个classpath路径，并同时加载多个classpath路径下, 不清楚什么场景下会出现-->
    <!--加载任意classpath下任意路径的任意controller匹配xml文件-->
    <!--classpath*:**/controller*.xml-->
    <!--需要遍历所有的classpath，所以加载速度是很慢的，尽量避免使用-->
    <context:property-placeholder ignore-unresolvable="true"
                                  location="classpath*:config.properties"/>

    <!-- 跨域相关设置-->
    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>

    <mvc:annotation-driven>
        <!--Jackson这些Converter默认Charset是UTF-8-->
        <!--默认的Converters包含MappingJackson2HttpMessageConverter、MappingJackson2XmlHttpMessageConverter等-->
        <mvc:message-converters register-defaults="true">
            <!--将StringHttpMessageConverter的默认编码设为UTF-8,默认是ISO-8859-1-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，它会像一个检查员，对进入DispatcherServlet的URL进行筛查，
    如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。-->
    <mvc:default-servlet-handler/>

    <!--允许静态资源放在任何地方，如WEB-INF目录下、类路径下等,传统Web容器的静态资源只能放在Web容器的根路径下-->
    <!--将Web根路径"/"及类路径/下的文件映射为/res路径-->
    <!--<mvc:resources location="/,classpath:/" mapping="/**"/>-->

    <!--拦截器 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/api/v1/deletecache/**"/>
            <bean class="com.netease.angel.interceptor.AdapterInterceptor1"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/api/v1/deletecache/**"/>
            <bean class="com.netease.angel.interceptor.AdapterInterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>-->


    <!-- 视图解析器，采用Jsp，定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 视图解析器，采用freemarker -->
    <!-- 配置freeMarker的模板路径 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="WEB-INF/templates/"/>
        <property name="defaultEncoding"
                  value="UTF-8"/><!-- 由于模板文件中使用utf-8编码，如果不显式指定，会采用系统默认编码，易造成乱码 -->
        <property name="freemarkerSettings"><!-- 定义FreeMaker丰富的自定义属性 -->
            <props>
                <prop key="classic_compatible">true</prop><!--  当碰到对象属性为null时，返回一个空字符串而非抛出系统异常 -->
            </props>
        </property>
    </bean>
    <!-- freemarker视图解析器 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="1"/><!-- 指定当前视图解析器的优先级 -->
    </bean>


    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
    <!-- 目前返回的数据是JSON，全局异常暂时以JSON形式返回，如果需要页面可以在全局异常中设置 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">error/500</prop>
            </props>
        </property>
    </bean>

    <!-- 声明 Controller -->
    <bean name="/index" class="com.netease.angel.controller.TestController1"/>
</beans>
